import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../../styles/Home.module.css'
import {useCallback, useEffect, useState} from "react";

type HomeProps = NextPage & {
  fcmToken?: string;
  getToken: () => void;
}

const Home = ({fcmToken, getToken}: HomeProps) => {

  const [permission, setPermission] = useState<"denied" | "default" | "granted">("denied")
    const checkNotification = useCallback(async () => {
        const status = Notification.permission;
        setPermission(status)
        if(status === 'granted') {
            await getToken();
        }
    }, [getToken])

    useEffect(() => {
        if ('permissions' in navigator) {
            navigator.permissions.query({ name: 'notifications' }).then(function (notificationPerm) {
                notificationPerm.onchange = async function () {
                    await checkNotification()
                };
            });
        }
        async function initialize() {
            await checkNotification()
        }
        initialize()
    }, [checkNotification])




    const handleRequestPermission = async () => {
      await Notification.requestPermission();
      checkNotification();
    }

    const renderDeniedNotificationBlock = () => (
        <>
            <p className={styles.description}>
                {'You have Denied Notification Permissions.\nPlease Reset your Permissions and Try Again.'}
            </p>
        </>
    )

    const renderAllowNotificationBlock = () => (
        <>
            <p className={styles.description}>
                Please Allow Notifications to Get Your Token
            </p>

            <button className={styles.button} onClick={handleRequestPermission}>Request Permission</button>
        </>
    )

    const renderGrantedNotificationBlock = () => (
        <>
            <p className={styles.description}>
                You have granted your Notification Permission
            </p>
            {fcmToken && (
               <>
                   <p className={styles.description}>
                       Your FCM Token
                   </p>
                   <p style={{marginLeft: 10, marginRight: 10, background: '#e7e7e7', padding: 10, wordBreak: 'break-word'}}>{fcmToken}</p>
               </>
            )}
        </>
    )

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h2 className={styles.title}>
          {'Welcome to Next.Js\nFirebase Messaging Example'}
        </h2>

        {permission === "denied" && renderDeniedNotificationBlock()}

        {permission === "default" && renderAllowNotificationBlock()}

        {permission === "granted" && renderGrantedNotificationBlock()}


      </main>
      
    </div>
  )
}

export default Home
